aliases:
  - &restore-yarn-cache
    keys:
      - v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # Fallback in case checksum fails
      - v1-yarn-{{ .Branch }}-

  - &save-yarn-cache
    paths:
      - node_modules
      - ~/.cache/yarn
    key: v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}

  - &filter-only-master
    branches:
      only:
        - master

  - &yarn
    |
      yarn install --non-interactive --cache-folder ~/.cache/yarn --frozen-lockfile
defaults: &defaults
  docker:
    - image: circleci/node:9.11.1

version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  deploy-job: # runs not using Workflows must have a `build` job as entry point
    # working_directory: ~/mern-starter # directory where steps will run
    <<: *defaults
    working_directory: ~/hyperdrive-client
    docker: # run the steps with Docker
      - image: circleci/node:9.11.1 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands 
      - checkout

      - restore_cache:
        name: Restore node_modules cache
        keys:
          - v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          - v1-node-{{ arch }}-{{ .Branch }}-
          - v1-node-{{ arch }}-

      - run:
        name: Nodejs Version
        command: node --version

      - run:
        name: Install Packages
        command: yarn install

      - run:
        name: Build Packages
        command: yarn build

      - save_cache:
        name: Save node_modules cache
        key: v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
        paths:
          - node_modules
      # - run: bash .circleci/setup-heroku.sh
      # - add_ssh_keys:
      #     fingerprints:
      #       - "48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4"
      # - deploy:
      #     name: Deploy Master to Heroku
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         git push heroku master
      #       fi
      - run:
        name: Deploy to Heroku
          command: |
            heroku git:remote -a HEROKU_APP_NAME
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:refs/heads/master
            sleep 5  # sleep for 5 seconds to wait for dynos
            heroku restart
workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-jobs:  # only deploy when master successfully builds
          requires:
            - build-job
          filters:
            branches:
              only: master